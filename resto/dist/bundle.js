(()=>{"use strict";var n={917:(n,e,r)=>{r.d(e,{Z:()=>c});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/\r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n","",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/\r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n"],sourceRoot:""}]);const c=i},28:(n,e,r)=>{r.d(e,{Z:()=>c});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,"html, body {\r\n  height:100%;\r\n  font-size: 12px;\r\n}\r\n/*for mobile phones*/\r\nbody {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\nheader {\r\n  background: black;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\nnav {\r\n}\r\n#logo {\r\n  width: 80px;\r\n  height: 80px;\r\n  margin-left: 10px;\r\n}\r\nbutton {\r\n  background-color: black; /* Green */\r\n  border: none;\r\n  color: white;\r\n  padding: 15px 32px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: grey;\r\n}\r\nfooter {\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  background: black;\r\n  color: white;\r\n  text-align: center;\r\n  font-size: 1.2em;\r\n  line-height: 3em;\r\n\r\n}\r\n\r\n.home {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n#promo{\r\n  height: 500px;\r\n  width: auto;\r\n  margin: 0 10px;\r\n}\r\n#main-text {\r\n  font-size: 2em;\r\n}\r\n\r\n.menu{\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  grid-gap: 20px;\r\n  justify-content: center;\r\n  margin: 10px;\r\n}\r\n.menu-card{\r\n  border: 2px solid black;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  text-align: center;\r\n  font-size: 1.5em;\r\n}\r\n.card-image {\r\n  height: 180px;\r\n  width: 180px;\r\n}\r\n\r\n.location{\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100%;\r\n}\r\n.loc-card{\r\n  border: 2px solid black;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  font-size: 1.8em;\r\n  width:50%;\r\n  margin: 20px;\r\n}\r\n.card-city {\r\n  font-weight: bold;\r\n}\r\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,eAAe;AACjB;AACA,oBAAoB;AACpB;EACE,aAAa;EACb,sBAAsB;AACxB;AACA;EACE,iBAAiB;EACjB,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;AACA;AACA;AACA;EACE,WAAW;EACX,YAAY;EACZ,iBAAiB;AACnB;AACA;EACE,uBAAuB,EAAE,UAAU;EACnC,YAAY;EACZ,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;EAClB,qBAAqB;EACrB,qBAAqB;EACrB,eAAe;EACf,eAAe;AACjB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,iBAAiB;EACjB,YAAY;EACZ,kBAAkB;EAClB,gBAAgB;EAChB,gBAAgB;;AAElB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;AACA;EACE,aAAa;EACb,WAAW;EACX,cAAc;AAChB;AACA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,gCAAgC;EAChC,cAAc;EACd,uBAAuB;EACvB,YAAY;AACd;AACA;EACE,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;EACb,kBAAkB;EAClB,gBAAgB;AAClB;AACA;EACE,aAAa;EACb,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,YAAY;AACd;AACA;EACE,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;EACb,gBAAgB;EAChB,SAAS;EACT,YAAY;AACd;AACA;EACE,iBAAiB;AACnB",sourcesContent:["html, body {\r\n  height:100%;\r\n  font-size: 12px;\r\n}\r\n/*for mobile phones*/\r\nbody {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\nheader {\r\n  background: black;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\nnav {\r\n}\r\n#logo {\r\n  width: 80px;\r\n  height: 80px;\r\n  margin-left: 10px;\r\n}\r\nbutton {\r\n  background-color: black; /* Green */\r\n  border: none;\r\n  color: white;\r\n  padding: 15px 32px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: grey;\r\n}\r\nfooter {\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  background: black;\r\n  color: white;\r\n  text-align: center;\r\n  font-size: 1.2em;\r\n  line-height: 3em;\r\n\r\n}\r\n\r\n.home {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n#promo{\r\n  height: 500px;\r\n  width: auto;\r\n  margin: 0 10px;\r\n}\r\n#main-text {\r\n  font-size: 2em;\r\n}\r\n\r\n.menu{\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  grid-gap: 20px;\r\n  justify-content: center;\r\n  margin: 10px;\r\n}\r\n.menu-card{\r\n  border: 2px solid black;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  text-align: center;\r\n  font-size: 1.5em;\r\n}\r\n.card-image {\r\n  height: 180px;\r\n  width: 180px;\r\n}\r\n\r\n.location{\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100%;\r\n}\r\n.loc-card{\r\n  border: 2px solid black;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  font-size: 1.8em;\r\n  width:50%;\r\n  margin: 20px;\r\n}\r\n.card-city {\r\n  font-weight: bold;\r\n}\r\n"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var A=[].concat(n[d]);t&&i[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),r&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=r):A[2]=r),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),i=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],d=t.base?s[0]+t.base:s[0],A=a[d]||0,l="".concat(d," ").concat(A);a[d]=A+1;var p=r(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,t);t.byIndex=c,e.splice(c,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=r(a[i]);e[c].references--}for(var s=t(n,o),d=0;d<a.length;d++){var A=r(a[d]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}a=s}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},572:(n,e,r)=>{n.exports=r.p+"9c16114d1c1fd6cae3e5.png"},114:(n,e,r)=>{n.exports=r.p+"318eddfbc6dd9cf90764.png"},495:(n,e,r)=>{n.exports=r.p+"6044dd7a08d7831c1083.png"},485:(n,e,r)=>{n.exports=r.p+"86894cd3d6ffa4745a2f.png"},520:(n,e,r)=>{n.exports=r.p+"2aa9c962f4674005be14.png"},74:(n,e,r)=>{n.exports=r.p+"813c37c8773b9c81bc94.png"}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var a=e[t]={id:t,exports:{}};return n[t](a,a.exports,r),a.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;r.g.importScripts&&(n=r.g.location+"");var e=r.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=n})(),(()=>{var n=r(379),e=r.n(n),t=r(795),o=r.n(t),a=r(569),i=r.n(a),c=r(565),s=r.n(c),d=r(216),A=r.n(d),l=r(589),p=r.n(l),u=r(917),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=A(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;var C=r(28),f={};f.styleTagTransform=p(),f.setAttributes=s(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=A(),e()(C.Z,f),C.Z&&C.Z.locals&&C.Z.locals;var h=r(572);var b=r(74);const g=function(){const n=document.querySelector("#content");for(;n.hasChildNodes();)n.removeChild(n.firstChild);n.className="home";const e=new Image;e.src=b,e.setAttribute("id","promo");const r=document.createElement("div");r.setAttribute("id","main-text");const t=document.createElement("div"),o=document.createElement("div");t.textContent="Grab fast while the promo last",o.textContent="You dont want to miss this!",r.appendChild(t),r.appendChild(o),n.appendChild(e),n.appendChild(r)},E=[{address:r(485),price:"8$",detail:"Pepperoni pizza"},{address:r(520),price:"6$",detail:"Vegetable pizza"},{address:r(495),price:"10$",detail:"Meat pizza"},{address:r(114),price:"11$",detail:"Bacon pizza"}],B=[{city:"Singapore",address:"We-love-eating Street, 90",phone:"012-3456"},{city:"New York",address:"All-you-can-eat Street, 34",phone:"210-9876"}];(function(n,e,r){const t=document.querySelector("header"),o=new Image;o.src=h,o.setAttribute("id","logo");const a=document.createElement("nav"),i=document.createElement("button"),c=document.createElement("button"),s=document.createElement("button");i.innerHTML="HOME",c.innerHTML="MENU",s.innerHTML="LOCATION",i.addEventListener("click",n),c.addEventListener("click",e),s.addEventListener("click",r),a.appendChild(i),a.appendChild(c),a.appendChild(s),t.appendChild(o),t.appendChild(a)})(g,(function(){const n=document.querySelector("#content");for(;n.hasChildNodes();)n.removeChild(n.firstChild);n.className="menu";for(let e=0;e<4;e++){const r=document.createElement("div");r.classList.add("menu-card");const t=new Image;t.classList.add("card-image"),t.src=E[e].address,r.appendChild(t);const o=document.createElement("div");o.classList.add("card-price"),o.textContent=E[e].price,r.appendChild(o);const a=document.createElement("div");a.classList.add("card-detail"),a.textContent=E[e].detail,r.appendChild(a),n.appendChild(r)}}),(function(){const n=document.querySelector("#content");for(;n.hasChildNodes();)n.removeChild(n.firstChild);n.className="location";for(let e=0;e<2;e++){const r=document.createElement("div");r.classList.add("loc-card");const t=document.createElement("div");t.classList.add("card-city"),t.textContent=B[e].city;const o=document.createElement("div");o.classList.add("card-address"),o.textContent=B[e].address;const a=document.createElement("div");a.classList.add("card-phone"),a.textContent=B[e].phone,r.appendChild(t),r.appendChild(o),r.appendChild(a),n.appendChild(r)}})),function(){const n=document.querySelector("footer"),e=document.createElement("div");e.textContent="Made by Michael for education purpose",n.appendChild(e)}(),g()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,